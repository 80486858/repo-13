---
title: Scalate
in_menu: true
sort_info: 1
--- name:overview pipeline:haml,tags

%h1 {project_name:}

{project_slogan:}

--- name:content pipeline:markdown,tags 

Scalate: Scala Template Engine
==============================

Scalate is a [Scala 2.8](http://www.scala-lang.org) based template engine which can be used in the following environments

* stand alone in any JVM
* as a servlet in any Java in a web application 
* when using JAXRS with [Jersey](https://jersey.dev.java.net/)
* in the [Play Framework](http://www.playframework.org/) via [play-scalate](http://github.com/pk11/play-scalate)
* in [Apache Camel](http://camel.apache.org/scalate.html) for transforming messages and templating

Scalate supports the following template formats

* [SSP](documentation/ssp-reference.html) which is like JSP/Erb/ASP 
* [Scaml](documentation/scaml-reference.html) which is a Scala dialect of [Haml](http://haml-lang.com/)

All expressions inside Scalate templates are typesafe and checked at edit/compile time to ensure you don't leave any mistakes in your pages. You can reuse Scala's powerful functions, closures and matchers as well as invoking Scala methods can use Scala's XML support to return page fragments.

Scalate templates generate Scala code which is compiled to fast statically typed method dispatch bytecode rather than using dynamic dispatch or reflection. Hopefully [IDEs will soon](creating-ide.html) be able to support full completion of all scala expressions within scalate template files.

Compared to JSP, Scalate misses out lots of stuff like EL, JSTL, tag libraries, tag files, JSP header files and lots of other stuff. In its place, Scalate reuses the [Scala](http://www.scala-lang.org) language which is way more powerful and expressive than the EL in JSP. 

Getting started
---------------

Try checkout the [Documentation](documentation/index.html)

