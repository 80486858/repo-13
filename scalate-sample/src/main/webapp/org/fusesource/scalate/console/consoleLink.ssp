<%
val query = request.getQueryString
val queryArg = if (query != null) {"&q=" + query} else {""}
val resourceArg = attributes.get("it") match {
    case Some(it: AnyRef) => "&r=" + it.getClass.getName
    case _ => ""
}
val templateArg = attributes.get("scalateTemplates") match {
    case Some(list: List[String]) => "&t=" + list.mkString("&t=")
    case _ => ""
}
%>
<a href='${uri("/scalate?uri=" + request.getRequestURI + queryArg + resourceArg + templateArg)}' title="Open the Scalate Console" target="_blank">Scalate Console</a>
<% if (parameterValues("_scalate").contains("showAttributes")) { %>
<table>
  <tr>
    <th>Attribute</th>
    <th>Value</th>
  </tr>
  <%
    import scala.collection.immutable.TreeSet
    for (k <- attributeKeys) {
  %>
    <tr>
      <td>${k}</td>
      <td>${attributes(k)}</td>
    </tr>
  <% } %>
</table>
<% } else {
  val queryPrefx = if (query != null) {query + "&" } else {"?"}
%>
<a href='${uri(request.getRequestURI + queryPrefx + "_scalate=showAttributes")}' title="Show the current request attributes">Show Attributes</a>
<% } %>
