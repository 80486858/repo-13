# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  # issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: true
  # List of build tags, all linters use it.
  # Default: [].
  # build-tags:
  #   - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-dirs:
    # - src/external_libs
    # - autogenerated_by_my_lib
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: false
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-files:
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  # go: '1.19'
  linters:
  disable-all: true
  enable:
    - deadcode    # Finds unused code
    - unconvert   # Remove unnecessary type conversions
    - unused      # Checks Go code for unused constants, variables, functions and types
    - ineffassign # Detects when assignments to existing variables are not used
    - misspell    # Finds commonly misspelled English words in comments
    - gofmt       # Gofmt checks whether code was gofmt-ed
    - revive      # Revive is a replacement for golint, a coding style checker
    - errcheck    # errcheck is a program for checking for unchecked errors in go programs.
    - staticcheck # staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - govet       # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - depguard    # Depguard is useful for preventing specific packages from being used
    - bodyclose   # checks whether HTTP response body is closed successfully

linters-settings:
  depguard:
    include-go-root: true
    packages-with-error-message:
      - sync/atomic: "Use go.uber.org/atomic instead; see docs/dev/atomics.md"
  errcheck:
    # Disable warnings for `fmt` and `log` packages. Also ignore `Write` functions from `net/http` package.
    exclude-functions:
    - fmt.Errorf
    - fmt.Print
    - fmt.Printf
    - fmt.Println
    - (github.com/pulumi/pulumi/sdk/v3/go/pulumi.Log).Debug
    - (github.com/pulumi/pulumi/sdk/v3/go/pulumi.Log).Info
    - (github.com/pulumi/pulumi/sdk/v3/go/pulumi.Log).Warn
    - (github.com/pulumi/pulumi/sdk/v3/go/pulumi.Log).Error
    - (net/http).Write
    - io.WriteString
  staticcheck:
    go: "1.17"
    checks: ["all",
             "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022", # These ones are disabled by default on staticcheck
             "-ST1013", # Use HTTP code enums instead of integers
             # Actual issues that should be fixed eventually
             "-SA6002", # TODO: Fix sync.Pools
             "-SA4025", # TODO: Fix trace unit test
             "-SA1019", "-SA4011", "-SA4031" # Disabling these to re-enable golanci-lint default tests
            ]
  revive:
    rules:
      - name: package-comments
        disabled: true