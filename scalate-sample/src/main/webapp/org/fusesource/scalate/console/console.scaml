-@ import val consoleHelper: ConsoleHelper = new ConsoleHelper(context) 
#scalate-console
  - if (!optionEnabled("console"))
    .toggle.show
      %a(href={enableLink("console")} title="Show the Scalate Console") 
        %img(src="/images/project-icon-24x24.png")
        %img(src="/images/plus.png")
  - else
    .toggle.hide
      %a(href={disableLink("console")} title="Hide the Scalate Console")
        %img(src="/images/project-icon-24x24.png")
        Scalate Console
        %img(src="/images/minus.png")

    - if (newTemplateName.isDefined && resourceClassName.isDefined)
      - val newName = newTemplateName.get
      %h3 Create New Custom Template
      %p Create a new template called #{newName} from archetype
      %ul
        - for (a <- archetypes)
          %li
            %form(action={uri("/scalate/createTemplate")} method="post")
              %input(type="hidden" name="archetype" value={a.archetype})
              %input(type="hidden" name="newTemplateName" value={newName})
              %input(type="hidden" name="resourceClass" value={resourceClassName.get})
              %input(type="submit" value={a.name})
        

    - val sourceFile = resourceSourceFile
    - if (sourceFile.isDefined)
      .resoruces
        %p Resources
        - val file = resourceSourceFile.get
        %ul
          %li
            = editFileLink(file.getAbsolutePath)
              = file.getPath

    - if (!templates.isEmpty)
      .templates
        %p Templates
        %ul
          - for (template <- templates)
            %li
              = editLink(template)
                = template.stripPrefix("/")

    - if (!layouts.isEmpty)
      .layouts
        %p Layouts
        %ul
          - for (layout <- layouts)
            %li
              = editLink(layout)
                = layout.stripPrefix("/")

    - if (!optionEnabled("attributes"))
      .toggle.show
        %a(href={enableLink("attributes")} title="Show the Attributes") 
          Attributes
          %img(src="/images/plus.png")
    - else 
      .toggle.hide
        %a(href={disableLink("attributes")} title="Hide the Attributes") 
          Attributes
          %img(src="/images/minus.png")
      .attributes
        %table#attributes
          %tr
            %th Name
            %th Value
          - for (k <- attributeKeys)
            - if (k != "body")
              %tr
                %td#name
                  = k
                %td#value
                  = attributes(k)

    - if( attributes("body")!=null )
      - if (!optionEnabled("body"))
        .toggle.show
          %a(href={enableLink("body")} title="Show the Body") 
            Body
            %img(src="/images/plus.png")
      - else
        .toggle.hide
          %a(href={disableLink("body")} title="Hide the Body") 
            Body
            %img(src="/images/minus.png")
        .body
          %pre(class="brush: html")<
            &~ attributes("body")
          :javascript
            SyntaxHighlighter.all()

