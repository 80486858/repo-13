<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<%@ var body: String %>
<%@ var title : String = "Scalate Sample" %>
<% response.setContentType("text/html") %>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="description goes here" />
    <meta name="keywords" content="keywords,goes,here" />
    <meta name="author" content="Your Name" />
    <link href="/css/style.css" rel="stylesheet" type="text/css" />

    <title>${title}</title>
</head>

<body>

  <div id="navigation">
  	<div class="wrapper">
      <ul>
        <% if (request.getRequestURI.startsWith("/index.")) { %>
        <li class="webgen-menu-level1 webgen-menu-item-selected"><span>Home</span></li>
        <% } else { %>
        <li class="webgen-menu-level1 webgen-menu-submenu"><a href="/">Home</a></li>
        <% } %>
        <li class="webgen-menu-level1 webgen-menu-submenu"><a href="http://scalate.fusesource.org/">Documentation</a></li></ul>
  	</div>
  </div>

  <div id='content'>
  	<div class='wrapper'>
      <%= body %>
  	</div>
  </div>

  <div id='footer'>
  	<div class='wrapper'>
      <hr/>
      
      <%
      val query = request.getQueryString
      val queryArg = if (query != null) {"&q=" + query} else {""}
      val resourceArg = attributes.get("it") match {
          case Some(it: AnyRef) => "&r=" + it.getClass.getName
          case _ => ""
      }
      val templateArg = attributes.get("scalateTemplates") match {
          case Some(list: List[String]) => "&t=" + list.mkString("&t=")
          case _ => ""
      }
      %>
      <a href='${uri("/scalate?uri=" + request.getRequestURI + queryArg + resourceArg + templateArg)}' title="Open the Scalate Console" target="_blank">Scalate Console</a>
      <% if (parameterValues("_scalate").contains("showAttributes")) { %>
      <table>
        <tr>
          <th>Attribute</th>
          <th>Value</th>          
        </tr>
        <%
          import scala.collection.immutable.TreeSet
          for (k <- attributeKeys) {
        %>
          <tr>
            <td>${k}</td>
            <td>${attributes(k)}</td>
          </tr>
        <% } %>
      </table>
      <% } else {
        val queryPrefx = if (query != null) {query + "&" } else {"?"}
      %>
      <a href='${uri(request.getRequestURI + queryPrefx + "_scalate=showAttributes")}' title="Show the current request attributes">Show Attributes</a>
      <% } %>
  	</div>
  </div>

</body>
</html>
