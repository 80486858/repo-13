<img src="/images/scalate/project-logo.png"/>

<p>
  Welcome to Scalate: the Scala Template Engine. Try surfing some of the examples below
</p>

<h2>SSP Samples</h2>

<ul>
  <li>
    <a href="ssp/simple.ssp">simple</a>
  </li>
  <li>
    <a href="ssp/ifExpression.ssp">using Scala if expression inside an SSP expression</a>
  </li>
  <li>
    <a href="ssp/matchExpression.ssp">using Scala match/case expression inside an SSP expression</a>
  </li>
  <li>
    <a href="ssp/locale.ssp">shows use of locales and auto-formatting of numbers and dates</a>
  </li>
  <li>
    <a href="ssp/customLayout.ssp">a custom layout</a>
  </li>
  <li>
    <a href="ssp/noLayout.ssp">no layout</a>
  </li>
  <li>
    <a href="ssp/exampleIncludes.ssp">includes example</a> shows how to include other templates or fragments
  </li>
  <li>
    <a href="ssp/snippet.ssp">invoke a snippet implemented in scala code</a>
  </li>
  <li>
    <a href="sampleServlet">servlet invoking a SSP with arguments</a>
  </li>
  <li>
    <a href="ssp/defaultAttribute.ssp">an SSP with an attribute using a default value</a>
  </li>
  <li>
    <a href="ssp/missingAttribute.ssp">try an SSP with missing attributes</a> (which should generate an error)
  </li>
  <li>
    <a href="ssp/renderTemplate.ssp">render a partial template</a>
  </li>
  <li>
    <a href="ssp/renderObject.ssp">render an object using its default template</a>
  </li>
  <li>
    <a href="ssp/renderCollection.ssp">render a collection of objects using their default template</a>
  </li>
  <li>
    <a href="ssp/renderCaseClass.ssp">render an object using the default Product template</a> which renders any case class
  </li>
  <li>
    <a href="ssp/sampleTag.ssp">custom tag</a> process a block of text using a simple scala function
  </li>
  <li>
    <a href="ssp/sampleTag2.ssp">custom tag 2</a> as above using an explicit RenderContext param
  </li>
  <li>
    <a href="ssp/sampleTag3.ssp">custom tag 3</a> the scala function body uses a RenderContext variable
  </li>
</ul>

<h2>Scaml Samples</h2>

Scalate also supports version of <a href="http://haml-lang.com/">haml</a> markup called Scaml

<ul>
  <li>
    <a href="scaml/standalone.scaml">simple</a>
  </li>
  <li>
    <a href="scaml/locale.scaml">shows use of locales and auto-formatting of numbers and dates</a>
  </li>
  <li>
    <a href="scaml/snippet.scaml">invoke a snippet implemented in scala code</a>
  </li>
  <li>
    <a href="scaml/defaultAttribute.scaml">an Scaml with an attribute using a default value</a>
  </li>
  <li>
    <a href="scaml/missingAttribute.scaml">try an Scaml with missing attributes</a> (which should generate an error)
  </li>
  <li>
    <a href="scaml/renderObject.scaml">render an object using its default template</a>
  </li>
  <li>
    <a href="scaml/renderCollection.scaml">render a collection of objects using their default template</a>
  </li>
  <li>
    <a href="scaml/renderCaseClass.scaml">render an object using the default Product template</a> which renders any case class
  </li>
  <li>
    <a href="scaml/sampleTag.scaml">custom tag</a> process a block of text using a simple scala function
  </li>
  <li>
    <a href="scaml/sampleTag2.scaml">custom tag 2</a> as above using an explicit RenderContext param
  </li>
  <li>
    <a href="scaml/sampleTag3.scaml">custom tag 3</a> the scala function body uses a RenderContext variable
  </li>
</ul>


<h2>JAXRS Samples</h2>

<ul>
  <li>
    <a href="foo">FooResource</a>
  </li>
  <li>
    <a href="foo/abc">Item ABC</a> a child resource
  </li>
  <li>
    <a href="foo/def">Item DEF</a> a child resource
  </li>
</ul>

<h2>Error Messages</h2>

<ul>
  <li>
    <a href="scaml/errors/templateCompileError.scaml">Template Syntax Error</a>
  </li>
  <li>
    <a href="scaml/errors/scalaCompileError.scaml">Scala Compile Error</a>
  </li>
  <li>
    <a href="bad">Error in JAXRS view template</a>
  </li>
  <li>
    <a href="scaml/errors/runtimeException.scaml">An Exception thrown at Runtime while rendering a template</a>
  </li>
</ul>

