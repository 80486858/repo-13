<project name="ServerPages" default="package" basedir=".">

  <description>
    Server Pages
  </description>


  <!-- Load properties files -->
  <property file="buildenv.properties"/>
  <property file="local.properties"/>
  <property file="global.properties"/>


  <target name="init" unless="built.init">
    <!-- Set global properties for this build -->
    <property name="project.rootdir.staging" value="${project.rootdir.build}/staging"/>

    <!-- Create the timestamp -->
    <tstamp/>

    <!-- Increment the build number and set the 'build.number' property -->
    <buildnumber file="build.number"/>

    <property name="built.init" value="true"/>
  </target>


  <target name="serverpages" depends="init" description="Build the 'serverpages' subproject">
    <ant dir="${subproject.serverpages.rootdir}" target="all"/>
  </target>


  <target name="sample" depends="serverpages" description="Build the 'sample' subproject">
    <ant dir="${subproject.sample.rootdir}" target="all"/>
  </target>


  <target name="stage" depends="serverpages, sample" description="Build a distribution package subtree">
    <!-- Create required directory structure -->
    <mkdir dir="${project.rootdir.staging}"/>

    <!-- Copy ingredients from this project to the staging subtree -->
    <copy todir="${project.rootdir.staging}">
      <fileset file="documents/LICENSE"/>
      <fileset file="documents/README"/>
      <fileset file="${subproject.serverpages.rootdir}/build/jar/*.jar"/>
      <fileset file="${subproject.sample.rootdir}/build/war/*.war"/>
    </copy>
  </target>


  <target name="package" depends="stage" description="Build a distribution package">
    <!-- Create required directory structure -->
    <mkdir dir="${project.rootdir.package}"/>

    <!-- Bundle everything up into a single archive -->
    <tar destfile="${project.rootdir.package}/serverpages-${project.version}.${build.number}-${DSTAMP}.tar.gz" compression="gzip">
      <tarfileset dir="${project.rootdir.staging}"/>
    </tar>
  </target>


  <target name="all" depends="package" description="Build everything"/>


  <target name="clean" depends="init" description="Clean up">
    <!-- Clean subprojects -->
    <ant dir="${subproject.sample.rootdir}" target="clean"/>
    <ant dir="${subproject.serverpages.rootdir}" target="clean"/>

    <!-- Clean master project -->
    <delete dir="${project.rootdir.build}"/>
    <delete dir="${project.rootdir.package}"/>
  </target>


  <!-- Define Scala-related Ant tasks -->
  <taskdef resource="scala/tools/ant/antlib.xml">
    <classpath>
      <pathelement location="${buildenv.components.scala.scala-lang.root}/lib/scala-compiler.jar"/>
      <pathelement location="${buildenv.components.scala.scala-lang.root}/lib/scala-library.jar"/>
    </classpath>
  </taskdef>

</project>
