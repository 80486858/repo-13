{
    "components": {
        "schemas": {
            "ACL": {
                "properties": {
                    "@id": {
                        "type": "string"
                    },
                    "prinperm": {
                        "type": "object"
                    },
                    "prinrole": {
                        "type": "object"
                    },
                    "roleperm": {
                        "type": "object"
                    }
                },
                "title": "A set of permissions",
                "type": "object"
            },
            "AddableResource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResource"
                    },
                    {
                        "$ref": "#/components/schemas/WritableResource"
                    }
                ],
                "title": "Writable resource data",
                "type": "object"
            },
            "Addon": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Addon data",
                "type": "object"
            },
            "AddonResponse": {
                "properties": {
                    "available": {
                        "items": {
                            "$ref": "#/components/schemas/Addon",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "installed": {
                        "items": {
                            "$ref": "#/components/schemas/Addon",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Addons response data",
                "type": "object"
            },
            "AdvancedQuery": {
                "additionalProperties": false,
                "properties": {
                    "and": {
                        "items": {
                            "$ref": "#/components/schemas/AdvancedQueryTerm"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "and"
                ],
                "title": "Query",
                "type": "object"
            },
            "AdvancedQueryTerm": {
                "oneOf": [
                    {
                        "additionalProperties": {
                            "items": {
                                "oneOf": [
                                    {
                                        "additionalProperties": false,
                                        "properties": {
                                            "var": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "items": {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "boolean"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        "example": {
                            "text_contains": [
                                {
                                    "var": "title"
                                },
                                "foobar"
                            ]
                        },
                        "maxProperties": 1,
                        "minProperties": 1,
                        "properties": {
                            "exists": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "var": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "maxProperties": 1,
                        "minProperties": 1,
                        "properties": {
                            "and": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            },
                            "and_not": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            },
                            "or": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ],
                "title": "Query term"
            },
            "AllPermissions": {
                "items": {
                    "$ref": "#/components/schemas/Permissions",
                    "type": "object"
                },
                "type": "array"
            },
            "Application": {
                "properties": {
                    "databases": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static_directory": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static_file": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "title": "Application data",
                "type": "object"
            },
            "BaseResource": {
                "properties": {
                    "@type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Base resource data",
                "type": "object"
            },
            "BatchQueryRequest": {
                "additionalProperties": false,
                "properties": {
                    "operation": {
                        "additionalProperties": false,
                        "properties": {
                            "endpoint": {
                                "description": "relative path for operation",
                                "type": "string"
                            },
                            "method": {
                                "enum": [
                                    "PATCH",
                                    "POST"
                                ],
                                "type": "string"
                            },
                            "payload": {
                                "type": "object"
                            }
                        },
                        "required": [
                            "method",
                            "payload"
                        ],
                        "type": "object"
                    },
                    "query": {
                        "$ref": "#/components/schemas/Query"
                    }
                },
                "required": [
                    "operation",
                    "query"
                ],
                "title": "@batchOnQuery payload",
                "type": "object"
            },
            "Behavior": {
                "properties": {
                    "behavior": {
                        "title": "Dotted name to interface",
                        "type": "string"
                    }
                },
                "required": [
                    "behavior"
                ],
                "title": "Behavior",
                "type": "object"
            },
            "BehaviorsResponse": {
                "properties": {
                    "available": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dynamic": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "title": "Behavior data on a resource",
                "type": "object"
            },
            "ChannelDeleteMessage": {
                "additionalProperties": false,
                "properties": {
                    "idx": {
                        "description": "What message to delete",
                        "type": "number"
                    }
                },
                "required": [
                    "idx"
                ],
                "title": "Delete message at given idx",
                "type": "object"
            },
            "ChannelEditMessage": {
                "additionalProperties": false,
                "properties": {
                    "idx": {
                        "description": "What message to delete",
                        "type": "number"
                    },
                    "text": {
                        "description": "New text for message",
                        "type": "string"
                    }
                },
                "required": [
                    "idx"
                ],
                "title": "Edit message at given idx",
                "type": "object"
            },
            "ChannelMessage": {
                "additionalProperties": false,
                "properties": {
                    "text": {
                        "maxLength": 2000,
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "title": "Channel message",
                "type": "object"
            },
            "ChannelMessageResponse": {
                "additionalProperties": false,
                "properties": {
                    "author": {
                        "maxLength": 200,
                        "type": "string"
                    },
                    "created": {
                        "type": "number"
                    },
                    "idx": {
                        "type": "number"
                    },
                    "modified": {
                        "type": "number"
                    },
                    "text": {
                        "maxLength": 2000,
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "title": "Channel message",
                "type": "object"
            },
            "ChannelRecentMessagesPayload": {
                "additionalProperties": false,
                "properties": {
                    "channels": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 15,
                        "type": "array"
                    },
                    "number": {
                        "maximum": 5,
                        "minimum": 1,
                        "type": "number"
                    }
                },
                "required": [
                    "channels"
                ],
                "title": "Aggregate recent channel activity",
                "type": "object"
            },
            "ChannelRecentMessagesResponse": {
                "additionalProperties": {
                    "properties": {
                        "messages": {
                            "items": {
                                "$ref": "#/components/schemas/ChannelMessageResponse"
                            },
                            "type": "array"
                        },
                        "reason": {
                            "description": "Reason for response if empty. For example, if channel not found",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "properties": {},
                "title": "Channel recent messages",
                "type": "object"
            },
            "ChannelSearch": {
                "additionalProperties": false,
                "properties": {
                    "count": {
                        "type": "number"
                    },
                    "query": {
                        "description": "String to search for",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "Edit message at given idx",
                "type": "object"
            },
            "ChannelSearchResponse": {
                "items": {
                    "$ref": "#/components/schemas/ChannelMessageResponse"
                },
                "title": "Response from search request",
                "type": "object"
            },
            "ChannelTake": {
                "additionalProperties": false,
                "properties": {
                    "count": {
                        "description": "Number of messages to consume from this index",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "number"
                    },
                    "idx": {
                        "description": "Where to seek from",
                        "minimum": -1,
                        "type": "number"
                    }
                },
                "title": "Take from a desired index in REVERSE order",
                "type": "object"
            },
            "ChannelTakeResponse": {
                "items": {
                    "$ref": "#/components/schemas/ChannelMessageResponse"
                },
                "title": "Response from channel take request",
                "type": "array"
            },
            "ChannelUnread": {
                "additionalProperties": false,
                "properties": {
                    "channel": {
                        "type": "number"
                    },
                    "count": {
                        "type": "number"
                    }
                },
                "required": [
                    "count"
                ],
                "title": "Channel unread count",
                "type": "object"
            },
            "DataAPIResult": {
                "additionalProperties": false,
                "properties": {
                    "cursor": {
                        "type": "string"
                    },
                    "deleted": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "total": {
                        "type": "number"
                    },
                    "updates": {
                        "items": {
                            "$ref": "#/components/schemas/DataAPIResultItem"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DataAPIResultItem": {
                "additionalProperties": true,
                "properties": {
                    "@assigned-roles": {
                        "additionalProperties": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": "object"
                    },
                    "@id": {
                        "type": "string"
                    },
                    "@timestamp": {
                        "description": "Can be used for since param",
                        "type": "string"
                    },
                    "@type": {
                        "type": "string"
                    },
                    "@uid": {
                        "type": "string"
                    },
                    "@users-permissions": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "creation_date": {
                        "type": "string"
                    },
                    "creators": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "modification_date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasourceCapability": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "DatasourceType": {
                "additionalProperties": false,
                "properties": {
                    "capabilities": {
                        "items": {
                            "$ref": "#/components/schemas/DatasourceCapability"
                        },
                        "type": "array"
                    },
                    "config_type": {
                        "type": "string"
                    },
                    "type_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "type_name"
                ],
                "type": "object"
            },
            "DatasourceTypes": {
                "items": {
                    "$ref": "#/components/schemas/DatasourceType"
                },
                "type": "array"
            },
            "EmptyWSBody": {
                "additionalProperties": false,
                "properties": {},
                "title": "Notify others that you are typing",
                "type": "object"
            },
            "IdentitiesDiscoveryQuery": {
                "oneOf": [
                    {
                        "additionalProperties": false,
                        "description": "To match on all source accounts and get their mapped identities",
                        "properties": {
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "cursor": {
                                "description": "Cursor to get more results pages",
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "cursor"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "filters": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_filters"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "required": [
                            "filters"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "filters": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_filters"
                            },
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "required": [
                            "filters",
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesDiscoveryResponse": {
                "properties": {
                    "cursor": {
                        "default": null,
                        "description": "Use to get more results",
                        "type": "string"
                    },
                    "items": {
                        "items": {
                            "description": "Identity summary",
                            "properties": {
                                "source_accounts": {
                                    "items": {
                                        "description": "Mapped Source account summary",
                                        "properties": {
                                            "datasource_type_name": {
                                                "type": "string"
                                            },
                                            "display_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "full_name": {
                                                "type": "string"
                                            },
                                            "origin_id": {
                                                "type": "string"
                                            },
                                            "signature": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "matching_source_accounts": {
                        "description": "Number of accounts matching the query.",
                        "type": "integer"
                    }
                },
                "required": [
                    "cursor",
                    "items",
                    "matching_source_accounts"
                ],
                "type": "object"
            },
            "IdentitiesDiscovery_filters": {
                "additionalProperties": false,
                "properties": {
                    "config_type": {
                        "description": "Match only source accounts from the specified list of config_type",
                        "example": [
                            "eslack"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "email_domain": {
                        "description": "Match only source account with specified email domains",
                        "example": [
                            "onna.com",
                            "amazon.es"
                        ],
                        "items": {
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                    },
                    "type_name": {
                        "description": "Match only source accounts from the specified list of type_name",
                        "example": [
                            "SlackEDatasource"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "title": "Filters applied to source accounts query",
                "type": "object"
            },
            "IdentitiesDiscovery_metadataField": {
                "description": "Field from the source account metadata to query on",
                "enum": [
                    "email",
                    "full_name",
                    "display_name"
                ],
                "type": "string"
            },
            "IdentitiesDiscovery_query": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/IdentitiesDiscovery_queryString"
                    },
                    {
                        "additionalProperties": false,
                        "description": "To search on a specific metadata field",
                        "example": {
                            "field": "full_name",
                            "query": "pepito"
                        },
                        "properties": {
                            "field": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_metadataField"
                            },
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_queryString"
                            }
                        },
                        "required": [
                            "field",
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesDiscovery_queryString": {
                "description": "Query string to match against source account metadata",
                "example": "pepito",
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "IdentitiesDiscovery_size": {
                "default": 30,
                "description": "Page results size. Maximum page size is 100.",
                "minimum": 0,
                "type": "integer"
            },
            "IdentitiesSearchQuery": {
                "oneOf": [
                    {
                        "additionalProperties": false,
                        "description": "To scroll on all identities and get their mapped source accounts",
                        "properties": {
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesSearch_size"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "cursor": {
                                "description": "Cursor to get more results pages",
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "cursor"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesSearch_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesSearch_size"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesSearchResponse": {
                "properties": {
                    "cursor": {
                        "default": null,
                        "description": "Use to get more results",
                        "type": "string"
                    },
                    "items": {
                        "items": {
                            "description": "Identity summary",
                            "properties": {
                                "source_accounts": {
                                    "items": {
                                        "description": "Mapped source accounts summary",
                                        "properties": {
                                            "config_type": {
                                                "type": "string"
                                            },
                                            "datasource_type_name": {
                                                "type": "string"
                                            },
                                            "display_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "full_name": {
                                                "type": "string"
                                            },
                                            "origin_id": {
                                                "type": "string"
                                            },
                                            "signature": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "matching_identities": {
                        "description": "Number of identities matching the query.",
                        "type": "integer"
                    }
                },
                "required": [
                    "cursor",
                    "items",
                    "matching_identities"
                ],
                "type": "object"
            },
            "IdentitiesSearch_query": {
                "description": "Query string to match against identities title",
                "example": "pepito",
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "IdentitiesSearch_size": {
                "default": 30,
                "description": "Page results size. Maximum page size is 100.",
                "minimum": 0,
                "type": "integer"
            },
            "IdentityGroup": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "maxLength": 1048576,
                        "type": "string"
                    },
                    "origin_date_created": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "origin_date_modified": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "origin_id": {
                        "description": "Identifier at the origin source",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "other_metadata": {
                        "additionalProperties": {
                            "oneOf": [
                                {
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "type": "array"
                                }
                            ]
                        },
                        "description": "Other source account group's generic metadata",
                        "maxProperties": 10,
                        "properties": {},
                        "title": "Source account other metadata",
                        "type": "object"
                    },
                    "signature": {
                        "description": "Signature/hash. Can be used by spyder to identify whether the source account data has changed",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "title": {
                        "maxLength": 1024,
                        "type": "string"
                    }
                },
                "title": "IdentityGroup",
                "type": "object"
            },
            "LegalHold": {
                "properties": {
                    "active": {
                        "default": true,
                        "type": "boolean"
                    },
                    "configuration": {
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "properties": {
                                    "datasources": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "hold_type": {
                                        "enum": [
                                            "datasources"
                                        ],
                                        "type": "string"
                                    },
                                    "principals": {
                                        "default": [],
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "datasources",
                                    "hold_type"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": true,
                                "properties": {
                                    "hold_type": {
                                        "enum": [
                                            "identities"
                                        ],
                                        "type": "string"
                                    },
                                    "principals": {
                                        "default": [],
                                        "description": "Principal ids that will get legal hold notifications",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "source_accounts": {
                                        "description": "Source accounts to put on hold",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "source_accounts",
                                    "hold_type"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "finished": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "notify": {
                        "default": false,
                        "type": "boolean"
                    },
                    "started": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "title": "Legal hold",
                "type": "object"
            },
            "Permissions": {
                "properties": {
                    "prinperm": {
                        "items": {
                            "$ref": "#/components/schemas/PrincipalPermission",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "prinrole": {
                        "items": {
                            "$ref": "#/components/schemas/PrincipalRole",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "roleperm": {
                        "items": {
                            "$ref": "#/components/schemas/RolePermission",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Permissions defined for a resource ACL",
                "type": "object"
            },
            "PrincipalPermission": {
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "principal": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "principal",
                    "permission",
                    "setting"
                ],
                "title": "Permission assigned to principal",
                "type": "object"
            },
            "PrincipalPermissions": {
                "additionalProperties": false,
                "properties": {
                    "permissions": {
                        "items": {
                            "enum": [
                                "onna.GetUserActivity",
                                "onna.permission:ManageLegalHolds",
                                "onna.permission:ManageLegalHoldWorkspaces",
                                "onna.CreateAccountFields",
                                "onna.permission:ManageIdentities"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "principal": {
                        "type": "string"
                    }
                },
                "required": [
                    "principal",
                    "permissions"
                ],
                "title": "Principal permissions setting",
                "type": "object"
            },
            "PrincipalRole": {
                "properties": {
                    "principal": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "principal",
                    "role",
                    "setting"
                ],
                "title": "Role assigned to principal",
                "type": "object"
            },
            "Query": {
                "properties": {
                    "advanced": {
                        "$ref": "#/components/schemas/AdvancedQuery"
                    },
                    "aggs_includes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "excludes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "facets": {
                        "items": {
                            "$ref": "#/components/schemas/QueryFacet"
                        },
                        "maxItems": 100,
                        "type": "array"
                    },
                    "filters": {
                        "items": {
                            "properties": {
                                "filterType": {
                                    "type": "string"
                                },
                                "filtersSelected": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "filterType"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "from": {
                        "type": "number"
                    },
                    "hide_children": {
                        "default": true,
                        "type": "boolean"
                    },
                    "highlight": {
                        "default": false,
                        "type": "boolean"
                    },
                    "includes": {
                        "oneOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "paginate": {
                        "type": "boolean"
                    },
                    "participants": {
                        "properties": {
                            "groups": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "search_after": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "size": {
                        "default": 10,
                        "type": "number"
                    },
                    "sort": {
                        "properties": {
                            "direction": {
                                "type": "string"
                            },
                            "field": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "field",
                            "direction"
                        ],
                        "type": "object"
                    },
                    "suggest": {
                        "default": false,
                        "type": "boolean"
                    },
                    "terms": {
                        "items": {
                            "properties": {
                                "term": {
                                    "type": "string"
                                },
                                "term_type": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "term",
                                "term_type"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Query payload",
                "type": "object"
            },
            "QueryFacet": {
                "additionalProperties": false,
                "properties": {
                    "facetSelected": {
                        "$ref": "#/components/schemas/QueryFacetValue"
                    },
                    "facetType": {
                        "type": "string"
                    },
                    "facetsSelected": {
                        "$ref": "#/components/schemas/QueryFacetValue"
                    }
                },
                "title": "Query Facet",
                "type": "object"
            },
            "QueryFacetValue": {
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "from": {
                                    "type": "string"
                                },
                                "to": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "max": {
                                    "type": "number"
                                },
                                "min": {
                                    "type": "number"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "type": "array"
            },
            "RealIdentity": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "Identity id",
                        "type": "string"
                    },
                    "onna_user": {
                        "title": "Onna user",
                        "type": "string"
                    },
                    "source_accounts": {
                        "items": {
                            "title": "Source account id",
                            "type": "string"
                        },
                        "title": "Source accounts",
                        "type": "array"
                    },
                    "title": {
                        "title": "Identity name",
                        "type": "string"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "Create a new identity",
                "type": "object"
            },
            "RealIdentityPATCH": {
                "additionalProperties": false,
                "properties": {
                    "onna_user": {
                        "title": "Onna user",
                        "type": "string"
                    },
                    "source_accounts": {
                        "items": {
                            "title": "Source account id",
                            "type": "string"
                        },
                        "title": "Source accounts",
                        "type": "array"
                    },
                    "title": {
                        "title": "Identity name",
                        "type": "string"
                    }
                },
                "title": "Modify an existing identity",
                "type": "object"
            },
            "Resource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WritableResource"
                    },
                    {
                        "properties": {
                            "@id": {
                                "type": "string"
                            },
                            "@type": {
                                "type": "string"
                            },
                            "parent": {
                                "properties": {
                                    "@id": {
                                        "type": "string"
                                    },
                                    "@type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "@id",
                            "@type"
                        ],
                        "type": "object"
                    }
                ],
                "title": "Resource data",
                "type": "object"
            },
            "ResourceACL": {
                "properties": {
                    "inherit": {
                        "items": {
                            "$ref": "#/components/schemas/ACL",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "local": {
                        "$ref": "#/components/schemas/ACL",
                        "type": "object"
                    }
                },
                "title": "All permissions for an object",
                "type": "object"
            },
            "ResourceFolder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "properties": {
                            "items": {
                                "$ref": "#/components/schemas/Resource",
                                "type": "object"
                            },
                            "length": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "title": "Resource folder data",
                "type": "object"
            },
            "RolePermission": {
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "role",
                    "permission",
                    "setting"
                ],
                "title": "Permission assigned to role",
                "type": "object"
            },
            "SearchQuery": {
                "properties": {
                    "__eq": {
                        "type": "string"
                    },
                    "__gt": {
                        "type": "string"
                    },
                    "__gte": {
                        "type": "string"
                    },
                    "__in": {
                        "type": "string"
                    },
                    "__lt": {
                        "type": "string"
                    },
                    "__lte": {
                        "type": "string"
                    },
                    "__not": {
                        "type": "string"
                    },
                    "_from": {
                        "type": "string"
                    },
                    "_metadata": {
                        "type": "string"
                    },
                    "_metadata_not": {
                        "type": "string"
                    },
                    "_size": {
                        "type": "string"
                    },
                    "_sort_asc": {
                        "type": "string"
                    },
                    "_sort_des": {
                        "type": "string"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "title": "Search Query",
                "type": "object"
            },
            "SearchResult": {
                "properties": {},
                "title": "Search result",
                "type": "object"
            },
            "SearchResults": {
                "properties": {
                    "items_count": {
                        "type": "integer"
                    },
                    "member": {
                        "items": {
                            "$ref": "#/components/schemas/SearchResult",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "member"
                ],
                "title": "Search results",
                "type": "object"
            },
            "SourceAccount": {
                "additionalProperties": false,
                "properties": {
                    "active": {
                        "title": "Active account",
                        "type": "boolean"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "city": {
                        "title": "City",
                        "type": "string"
                    },
                    "company_name": {
                        "title": "Company name",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "type": "string"
                    },
                    "deactivation_date": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display name",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "minLength": 1,
                        "title": "Email",
                        "type": "string"
                    },
                    "employee_department": {
                        "title": "Employee department",
                        "type": "string"
                    },
                    "employee_division": {
                        "title": "Employee division",
                        "type": "string"
                    },
                    "employee_title": {
                        "title": "Employee title",
                        "type": "string"
                    },
                    "first_name": {
                        "title": "First name",
                        "type": "string"
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last name",
                        "type": "string"
                    },
                    "origin_id": {
                        "description": "Identifier for an source account existing at a source",
                        "title": "SourceAccount identifier at the origin",
                        "type": "string"
                    },
                    "other_metadata": {
                        "additionalProperties": {
                            "oneOf": [
                                {
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "type": "array"
                                }
                            ]
                        },
                        "description": "Other source account's generic metadata",
                        "maxProperties": 10,
                        "properties": {},
                        "title": "Source account other metadata",
                        "type": "object"
                    },
                    "phone": {
                        "title": "Phone",
                        "type": "string"
                    },
                    "signature": {
                        "description": "Source account signature/hash. Can be used by spyder to identify whether the source account data has changed",
                        "title": "Source account signature",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "zipcode": {
                        "title": "Zip code",
                        "type": "string"
                    }
                },
                "required": [
                    "signature",
                    "origin_id"
                ],
                "title": "SourceAccount",
                "type": "object"
            },
            "UpdatePrincipalPermissions": {
                "items": {
                    "$ref": "#/components/schemas/PrincipalPermissions",
                    "type": "object"
                },
                "title": "Update a set of principals permissions",
                "type": "array"
            },
            "UpdateRegistry": {
                "properties": {
                    "value": {}
                },
                "required": [
                    "value"
                ],
                "title": "Update registry",
                "type": "object"
            },
            "UserSearchResult": {
                "properties": {
                    "num_x_page": {
                        "description": "Number per page",
                        "type": "number"
                    },
                    "page": {
                        "description": "Page of results",
                        "type": "number"
                    },
                    "result": {
                        "items": {
                            "properties": {
                                "blocked": {
                                    "type": "boolean"
                                },
                                "cn": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "mail": {
                                    "type": "string"
                                },
                                "sn": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "array"
                    },
                    "total": {
                        "description": "Number number of results",
                        "type": "number"
                    }
                },
                "title": "User Search Result",
                "type": "object"
            },
            "WebsocketChannelMessage": {
                "additionalProperties": false,
                "properties": {
                    "t": {
                        "description": "Type of websocket message",
                        "enum": [
                            "message",
                            "take",
                            "edit",
                            "delete",
                            "typing",
                            "search",
                            "flush"
                        ],
                        "type": "string"
                    },
                    "v": {
                        "type": "object"
                    }
                },
                "required": [
                    "t",
                    "v"
                ],
                "title": "Websocket chat message",
                "type": "object"
            },
            "WebsocketChannelResponse": {
                "additionalProperties": false,
                "properties": {
                    "e": {
                        "description": "Error code associated with payload",
                        "type": "string"
                    },
                    "m": {
                        "description": "Message associated with payload",
                        "type": "string"
                    },
                    "t": {
                        "description": "Type of websocket message",
                        "enum": [
                            "message",
                            "take",
                            "delete",
                            "edit",
                            "typing",
                            "search",
                            "e"
                        ],
                        "type": "string"
                    },
                    "v": {
                        "type": "object"
                    }
                },
                "required": [
                    "t",
                    "v"
                ],
                "title": "Websocket chat message",
                "type": "object"
            },
            "WritableResource": {
                "properties": {
                    "title": {
                        "type": "string"
                    }
                },
                "title": "Writable resource data",
                "type": "object"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "description": "Authentication to the API is performed via [HTTP Basic Auth](http://en.wikipedia.org/wiki/Basic_access_authentication).\n\nAll API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure).",
                "scheme": "basic",
                "type": "http"
            },
            "bearerAuth": {
                "bearerFormat": "JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "externalDocs": {
        "description": "Onna Developer Documentation",
        "url": "https://developers.onna.com"
    },
    "info": {
        "contact": {
            "email": "support@onna.com",
            "name": "Onna Support",
            "url": "https://support.onna.com"
        },
        "description": "REST API for Onna\n\n# Introduction\nThe API is the central hub for access and updating data related to Onna.\n\n## Requirements\nAccess to the Onna API requires that you have an active account.\n\nYou can sign up for an Onna account by filling out the [registration form](https://register.onna.com/signup?trial=true).",
        "title": "Onna API",
        "version": "1.0.5"
    },
    "openapi": "3.0.2",
    "paths": {
        "/{container_id}/{account_id}/@availableEdatasources": {
            "get": {
                "description": "Get a list of available enterprise Datasources for this account \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Get a list of available enterprise Datasources for this account",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@batch": {
            "post": {
                "description": "",
                "parameters": [
                    {
                        "default": false,
                        "description": "Commit changes to database for each individual request",
                        "in": "query",
                        "name": "eager-commit",
                        "type": "boolean"
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "default": [],
                                "in": "body",
                                "items": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "View full path",
                                            "type": "string"
                                        },
                                        "headers": {
                                            "default": {},
                                            "description": "View headers",
                                            "type": "object"
                                        },
                                        "method": {
                                            "description": "View method",
                                            "type": "string"
                                        },
                                        "payload": {
                                            "default": {},
                                            "description": "View body payload",
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "method",
                                        "endpoint"
                                    ],
                                    "type": "object"
                                },
                                "title": "Requests in batch",
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "List of responses for each view in batch",
                                    "items": {
                                        "properties": {
                                            "body": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "Response status code",
                                                "type": "int"
                                            },
                                            "success": {
                                                "description": "Whether response was successful",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successfully registered interface"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@batchOnQuery": {
            "post": {
                "description": "Operations sent to task queue based on query results \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Operations sent to task queue based on query results",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@behaviors": {
            "get": {
                "description": "Get information on behaviors for this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BehaviorsResponse"
                                }
                            }
                        },
                        "description": "A listing of behaviors for content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get information on behaviors for this resource",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/@caniadd": {
            "get": {
                "description": "Do some permission checks \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Do some permission checks",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@canido": {
            "get": {
                "description": "Check if user has permissions on context",
                "parameters": [
                    {
                        "in": "query",
                        "name": "permission",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Check if user has permissions on context",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@channelRecent": {
            "post": {
                "description": "Websocket channel activity \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelRecentMessagesPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Websocket channel activity",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@channelStatus": {
            "get": {
                "description": "Websocket message channel status \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ws_token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebsocketChannelMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Websocket message channel status",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@checkInvited": {
            "post": {
                "description": "Check if a set of users are guests on the system \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "maxItems": 10,
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successfully changed permissions for principal"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Check is a set of users are guests on the system",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@complianceQueries": {
            "get": {
                "description": "Get a list of modifiers used with compliance queries \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@configuration": {
            "get": {
                "description": "Get account configuration \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get account configuration",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@copy": {
            "post": {
                "description": "Copy resource and all the children \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "additionalProperties": false,
                                "properties": {
                                    "destination": {
                                        "description": "Absolute path to destination object from container",
                                        "type": "string"
                                    },
                                    "path": {
                                        "default": false,
                                        "description": "List of path to be copied",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 100,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "query": {
                                        "$ref": "#/components/schemas/Query",
                                        "default": false,
                                        "description": "Query to be copied"
                                    },
                                    "reset_acl": {
                                        "default": false,
                                        "description": "Remove users and roles from acl, except for the request user",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Copy resource and all the children",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@data": {
            "get": {
                "description": "Data API \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Date string",
                        "in": "query",
                        "name": "since",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of types",
                        "example": "Rule, Workspace, User, WalletEntry, WebhookEntry, Export, SeverityLevel, _datasources_",
                        "in": "query",
                        "name": "types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of parent_uids",
                        "in": "query",
                        "name": "parent_uids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataAPIResult"
                                }
                            }
                        },
                        "description": "Result set"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Data API",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "Data API \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "parent_uids": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "since": {
                                        "description": "Date string",
                                        "type": "string"
                                    },
                                    "types": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataAPIResult"
                                }
                            }
                        },
                        "description": "Result set"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Data API",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@datasourceAuthCode/{type}": {
            "get": {
                "description": "Retrieve an authorization code \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@datasourceTypes": {
            "get": {
                "description": "Get available Datasource information for account \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "available_datasources": {
                                            "$ref": "#/components/schemas/DatasourceTypes"
                                        },
                                        "available_edatasources": {
                                            "$ref": "#/components/schemas/DatasourceTypes"
                                        },
                                        "enabled_datasources": {
                                            "$ref": "#/components/schemas/DatasourceTypes"
                                        },
                                        "enabled_edatasources": {
                                            "$ref": "#/components/schemas/DatasourceTypes"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Result set"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get available Datasource information for account",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@deprecated": {
            "get": {
                "description": "Get a list of API endpoints that are being deprecated",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "deprecations": {
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "removed_at": {
                                                        "type": "string"
                                                    },
                                                    "why": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "array"
                                        },
                                        "version": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returns object of deprecations"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get a list of API endpoints that are being deprecated",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@downloadHold/{legal_hold_id}/{action_type}": {
            "get": {
                "description": "Download hold with specific action \u301c permission: onna.Public",
                "parameters": [
                    {
                        "in": "path",
                        "name": "legal_hold_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "action_type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.Public"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@enableEDS": {
            "get": {
                "description": "Retrieves a list of Enterprise Datasource types enabled for this account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of enabled Enterprise Datasource types",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@enabledDSTypes": {
            "get": {
                "description": "Retrieves a list of Datasource types enabled for this account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of enabled Datasource types",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@enabledEDS": {
            "get": {
                "description": "Retrieves a list of Enterprise Datasource types enabled for this account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of enabled Enterprise Datasource types",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@enabledSearchableFields": {
            "get": {
                "description": "Get a list of allowed searchable fields \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "Get a list of allowed searchable fields",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@exportable": {
            "get": {
                "description": "Deduplicate and filter specific exportable fields \u301c permission: onna.GetExportable",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.GetExportable"
                        ]
                    }
                ],
                "summary": "Deduplicate and filter specific exportable fields",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@filters": {
            "get": {
                "description": "Get various filters for a search query \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Get various filters for a search query",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@findUsers": {
            "get": {
                "description": "Search for a user in the user store \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "term",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSearchResult"
                                }
                            }
                        },
                        "description": "Returns results of user search"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@frontsearch": {
            "post": {
                "description": "Run a search.\n\nSee the [reference documentation](https://developers.onna.com/tutorial/primer/search-and-triggers.html#search). \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Query"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Search completed"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Run a search",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@getAccountFields": {
            "get": {
                "description": "Get custom fields in an account \u301c permission: onna.ViewAccountFields",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "successful operation."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.ViewAccountFields"
                        ]
                    }
                ],
                "summary": "Get custom fields in an account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@getAllChildren": {
            "get": {
                "description": "leverages elasticsearch to get all the children of a resource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scroll",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Return list page of all children paths"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "leverages elasticsearch to get all the children of a resource",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@getAllChildrenData": {
            "get": {
                "description": "leverages elasticsearch to get all the children of a resource, with included data \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "minimum": 1,
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scroll",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "items": {
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Return list page of all children paths and requested data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "leverages elasticsearch to get all the children of a resource, with included data",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@getDOAuthCode": {
            "get": {
                "description": "Get the Dropbox OAuth code callback for an account \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get the Dropbox OAuth code callback for an account",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@getEQuipAuthCode": {
            "post": {
                "description": "For using this endpoint you must authenticate with [Quip](https://quip.com/) \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "client_id": "xxx23424",
                                    "client_secret": "ewivhash-yu34997",
                                    "host_url": "https://my.onprem.quip.server.com"
                                },
                                "properties": {
                                    "client_id": {
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "host_url": {
                                        "default": "https://platform.quip.com",
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "client_id",
                                    "client_secret"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get the Enterprise Quip OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@getESlackAuthCode": {
            "get": {
                "description": "Get the Enterprise Slack OAuth code callback for a user \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get the Enterprise Slack OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@getMGraphAuthCode": {
            "get": {
                "description": "Authenticate MGraph entreprise \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Get authentication URL"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Authenticate MGraph entreprise",
                "tags": [
                    "Account",
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@getMGraphEnterpriseAuthCode": {
            "get": {
                "description": "Get MGraph entreprise auth code \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "default": "emsteams",
                            "enum": [
                                "office365",
                                "emsteams"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tenant",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Get authentication URL"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get MGraph entreprise auth code",
                "tags": [
                    "Account",
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@getUsers": {
            "post": {
                "description": "Get a list of users from the user store for this account \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@globalAssignableRoles": {
            "get": {
                "description": "Get a list of available roles \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get a list of available roles",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@groups": {
            "get": {
                "description": "Retrieves a list of all types of groups including `people groups` as well as `workspaces` that a user is part of.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "groupType",
                        "schema": {
                            "default": "PEOPLE_GROUP",
                            "enum": [
                                "PEOPLE_GROUP",
                                "WORK_SPACE",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of all groups in the current container.",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@groups/{group_id}": {
            "get": {
                "description": "Retrieves a list of all types of groups including `people groups` as well as `workspaces` that a user is part of.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of all groups in the current container.",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@initCheck": {
            "post": {
                "description": "Set up a user object \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Set up a user object",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@inviteUser": {
            "post": {
                "description": "Invite a user to Onna \u301c permission: onna.Invite",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "invite_message": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "send_email": {
                                        "default": true,
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully added user"
                    },
                    "400": {
                        "description": "Failed to create new user"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "428": {
                        "description": "User already exists"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.Invite"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content",
                    "Workspace"
                ]
            }
        },
        "/{container_id}/{account_id}/@keys": {
            "get": {
                "description": "Get a list of unique keys in a Datasource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Use last key in previous response to get further results.",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of keys in the response.",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "default": 1000,
                            "maximum": 1000,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 1000,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return ordered list of keys"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@magicLink": {
            "post": {
                "description": "Share a resource with a user \u301c permission: guillotina.Public",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully notified user if found"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.Public"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@metadataFields": {
            "get": {
                "description": "Get a list of metadata fields \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "Get a list of metadata fields",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@multiFileDownload": {
            "post": {
                "description": "Process multi-file download \u301c permission: onna.MultiFileDownload",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Multi-file download"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.MultiFileDownload"
                        ]
                    }
                ],
                "summary": "Process multi-file download",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@multiFileExport": {
            "post": {
                "description": "Process multi-file export \u301c permission: onna.MultiFileExport",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Multi-file export"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.MultiFileExport"
                        ]
                    }
                ],
                "summary": "Process multi-file export",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@myManagedPermissions": {
            "get": {
                "description": "Get assigned permissions on account for logged in user \u301c permission: onna.permission:ViewOwnPermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.permission:ViewOwnPermissions"
                        ]
                    }
                ],
                "summary": "Get assigned permissions on account for logged in user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@oauthgetcode": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.GetOAuthGrant"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            },
            "post": {
                "description": "",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.GetOAuthGrant"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@openRegistry": {
            "get": {
                "description": "Return a open subset of registry values \u301c permission: guillotina.Public",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.Public"
                        ]
                    }
                ],
                "summary": "Get open registry configuration setting",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@openSearch": {
            "get": {
                "description": "Allow search via a browser's location bar \u301c permission: guillotina.Public",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.Public"
                        ]
                    }
                ],
                "summary": "Allow search via a browser's location bar",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@originRetentionPolicies": {
            "get": {
                "description": "Get setting for origin retention policy tracking \u301c permission: onna.SeeRetentionPolicies",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SeeRetentionPolicies"
                        ]
                    }
                ],
                "summary": "Get setting for origin retention policy tracking",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@processingAggs": {
            "post": {
                "description": "Build a list of aggregations for a search \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Build a list of aggregations for a search",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@recent": {
            "get": {
                "description": "Get a list of the last visited resources \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Get a list of the last visited resources",
                "tags": [
                    "Search",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@resolveuid/{uid}": {
            "get": {
                "description": "Get content by UID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get content by UID",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/@retentionPolicies": {
            "get": {
                "description": "Modify the retention policy of a Datasource type \u301c permission: onna.SeeRetentionPolicies",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SeeRetentionPolicies"
                        ]
                    }
                ],
                "summary": "Modify the retention policy of a Datasource type",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@rules": {
            "get": {
                "description": "Retrieves a list of content rules in this account.  \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of content rules in this account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@search": {
            "get": {
                "description": "Make search request",
                "parameters": [
                    {
                        "description": "Generic search term support. See modifier list below for usage",
                        "in": "query",
                        "name": "term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "start from a point in search results",
                        "in": "query",
                        "name": "_from",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How large of result set. Max of 50.",
                        "in": "query",
                        "name": "_size",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How ascending field",
                        "in": "query",
                        "name": "_sort_asc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How descending field",
                        "in": "query",
                        "name": "_sort_des",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "list of metadata fields to include",
                        "in": "query",
                        "name": "_metadata",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "list of metadata fields to exclude",
                        "in": "query",
                        "name": "_metadata_not",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__eq",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__not",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__in",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Search results"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Make search request",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@searchTemplate": {
            "get": {
                "description": "Generate an Excel like file with search fields \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Generate an Excel like file with search fields",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@searchableFields": {
            "get": {
                "description": "Get a list of searchable fields \u301c permission: onna.SearchUsers",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.SearchUsers"
                        ]
                    }
                ],
                "summary": "Get a list of searchable fields",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@sendToStatic": {
            "post": {
                "description": "Process files in a static Datasource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Static Copy"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Process files in a static Datasource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@setupInvitedMembers": {
            "post": {
                "description": "Add billing and technical contact information to an account \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "billingEmail": {
                                        "type": "string"
                                    },
                                    "billingName": {
                                        "type": "string"
                                    },
                                    "billingSurname": {
                                        "type": "string"
                                    },
                                    "has_billing_contact": {
                                        "type": "boolean"
                                    },
                                    "has_technical_contact": {
                                        "type": "boolean"
                                    },
                                    "technicalEmail": {
                                        "type": "string"
                                    },
                                    "technicalName": {
                                        "type": "string"
                                    },
                                    "technicalSurname": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Add billing and technical contact information to an account",
                "tags": [
                    "Account",
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@sizes": {
            "get": {
                "description": "Get the size of various user owned content items \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Get the size of various user owned content items",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/@status": {
            "get": {
                "description": "Get the status of an account \u301c permission: onna.Public",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.Public"
                        ]
                    }
                ],
                "summary": "Get the status of an account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@statusAccount": {
            "get": {
                "description": "Get the account status \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get the account status",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@suggestions": {
            "get": {
                "description": "Get a list of suggested search terms \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Suggestion term string",
                        "in": "query",
                        "name": "term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Suggestion type",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Get a list of suggested search terms",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/@syncUsers": {
            "post": {
                "description": "Ensure users in user store exist in the account \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@types": {
            "get": {
                "description": "Read information on available types",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {}
                                }
                            }
                        },
                        "description": "Result results on types"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Read information on available types",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@types/{type_name}": {
            "get": {
                "description": "Read information on available types",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {}
                                }
                            }
                        },
                        "description": "Result results on types"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Read information on available types",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@user": {
            "get": {
                "description": "Get information on the currently logged in user",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {}
                                }
                            }
                        },
                        "description": "Get information on the user"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get information on the currently logged in user",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@userRoles": {
            "get": {
                "description": "Get a list of user roles for this context \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns array of user roles on context"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get a list of user roles for this context",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/@wallet": {
            "get": {
                "description": "Get wallet metadata \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": true,
                                        "properties": {
                                            "is_shared": {
                                                "title": "Whether wallet entry has been shared",
                                                "type": "boolean"
                                            },
                                            "usage": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "datasources_count": {
                                                            "title": "Total number of datasources wallet entry was used in",
                                                            "type": "integer"
                                                        },
                                                        "idmapping_datasources_count": {
                                                            "title": "Number of IDMapping datasources wallet entry is used in",
                                                            "type": "integer"
                                                        },
                                                        "user_id": {
                                                            "title": "User identifier",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "datasources_count",
                                                        "datasources_idmapping_count"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "wallet_entry_uuid": {
                                                "title": "Wallet entry unique identifier",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "wallet_entry_uuid",
                                            "is_shared",
                                            "usage"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "List wallet entries"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get wallet metadata",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@webhookRefs": {
            "get": {
                "description": "Webhook references \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Webhook references",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@workspaces": {
            "get": {
                "description": "Get a list of workspaces in this account \u301c permission: onna.permission:GetWorkspaces",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.permission:GetWorkspaces"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Workspace"
                ]
            }
        },
        "/{container_id}/{account_id}/@ws": {
            "get": {
                "description": "Make a web socket connection",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Make a web socket connection",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/@wstoken": {
            "get": {
                "description": "Return a web socket token",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "The new token"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.UseWebSockets"
                        ]
                    }
                ],
                "summary": "Return a web socket token",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}": {
            "delete": {
                "description": "Delete resource \u301c permission: guillotina.DeleteContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.DeleteContent"
                        ]
                    }
                ],
                "summary": "Delete resource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            },
            "get": {
                "description": "Retrieves serialization of resource",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "omit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResourceFolder"
                                        },
                                        {
                                            "properties": {
                                                "onna.canonical.behaviors.following.IFollowing": {
                                                    "properties": {
                                                        "favorite": {
                                                            "title": "Current user has it favorited",
                                                            "type": "boolean"
                                                        },
                                                        "favorites": {
                                                            "items": {
                                                                "title": "follower",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "favorites",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Retrieves serialization of resource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            },
            "head": {
                "description": "",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            },
            "patch": {
                "description": "Modify the content of this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WritableResource"
                                    },
                                    {
                                        "properties": {
                                            "onna.canonical.behaviors.following.IFollowing": {
                                                "properties": {
                                                    "favorite": {
                                                        "title": "Current user has it favorited",
                                                        "type": "boolean"
                                                    },
                                                    "favorites": {
                                                        "items": {
                                                            "title": "follower",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10000,
                                                        "title": "favorites",
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    }
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Modify the content of this resource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            },
            "post": {
                "description": "Add new resouce inside this container resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddableResource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceFolder"
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AddContent"
                        ]
                    }
                ],
                "summary": "Add new resouce inside this container resource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            },
            "put": {
                "description": "Replace the content of this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WritableResource"
                                    },
                                    {
                                        "properties": {
                                            "onna.canonical.behaviors.following.IFollowing": {
                                                "properties": {
                                                    "favorite": {
                                                        "title": "Current user has it favorited",
                                                        "type": "boolean"
                                                    },
                                                    "favorites": {
                                                        "items": {
                                                            "title": "follower",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10000,
                                                        "title": "favorites",
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    }
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Replace the content of this resource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@addable-types": {
            "get": {
                "description": "Return a list of type names that can be added to container",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned list of type names"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AddContent"
                        ]
                    }
                ],
                "summary": "Return a list of type names that can be added to container",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/{username}/@all_permissions": {
            "get": {
                "description": "See all permission settings for this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllPermissions"
                                }
                            }
                        },
                        "description": "All the permissions defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "See all permission settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@async-catalog-reindex": {
            "post": {
                "description": "Asynchronously reindex entire container content",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully initiated reindexing"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ReindexContent"
                        ]
                    }
                ],
                "summary": "Asynchronously reindex entire container content",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@backrefs": {
            "get": {
                "description": "View references to content \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "enum": [
                                "member",
                                "participant",
                                "identifies",
                                "associated",
                                "webhook",
                                "ds-member",
                                "group-associated",
                                "grouped-member"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "default": 1000,
                            "maximum": 1000,
                            "minimum": 1,
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "from": {
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "View references to content",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@behaviors": {
            "delete": {
                "description": "Remove behavior from resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Behavior"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully removed behavior"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "412": {
                        "description": "Behavior not assigned here"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Remove behavior from resource",
                "tags": []
            },
            "get": {
                "description": "Get information on behaviors for this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BehaviorsResponse"
                                }
                            }
                        },
                        "description": "A listing of behaviors for content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get information on behaviors for this resource",
                "tags": []
            },
            "patch": {
                "description": "Add behavior to resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Behavior"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully added behavior"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "412": {
                        "description": "Behavior already assigned here"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Add behavior to resource",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/{username}/@behaviors/{behavior}": {
            "delete": {
                "description": "Remove behavior from resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "behavior",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Behavior"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully removed behavior"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "412": {
                        "description": "Behavior not assigned here"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Remove behavior from resource",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/{username}/@canido": {
            "get": {
                "description": "Check if user has permissions on context",
                "parameters": [
                    {
                        "in": "query",
                        "name": "permission",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Check if user has permissions on context",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@catalog-reindex": {
            "post": {
                "description": "Reindex entire container content",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully reindexed content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ReindexContent"
                        ]
                    }
                ],
                "summary": "Reindex entire container content",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@data": {
            "get": {
                "description": "Data API \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Date string",
                        "in": "query",
                        "name": "since",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of types",
                        "example": "Rule, Workspace, User, WalletEntry, WebhookEntry, Export, SeverityLevel, _datasources_",
                        "in": "query",
                        "name": "types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of parent_uids",
                        "in": "query",
                        "name": "parent_uids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataAPIResult"
                                }
                            }
                        },
                        "description": "Result set"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Data API",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "Data API \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "parent_uids": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "since": {
                                        "description": "Date string",
                                        "type": "string"
                                    },
                                    "types": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataAPIResult"
                                }
                            }
                        },
                        "description": "Result set"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Data API",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@datasourceAuthCode/{type}": {
            "get": {
                "description": "Retrieve an authorization code \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@download/{field_name}": {
            "head": {
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@download/{field_name}/{field_name}": {
            "get": {
                "description": "Download the content of a file",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Download the content of a file",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@download/{field_name}/{filename}": {
            "head": {
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@download/{field_name}/{filename}/{field_name}": {
            "get": {
                "description": "Download the content of a file",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Download the content of a file",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@duplicate": {
            "post": {
                "description": "Duplicate resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "additionalProperties": false,
                                "properties": {
                                    "destination": {
                                        "description": "Absolute path to destination object from container or destination uid",
                                        "type": "string"
                                    },
                                    "new_id": {
                                        "description": "Optional new id to assign object",
                                        "type": "string"
                                    },
                                    "reset_acl": {
                                        "default": false,
                                        "description": "Remove users and roles from acl, except for the request user",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully duplicated object"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.DuplicateContent"
                        ]
                    }
                ],
                "summary": "Duplicate resource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@dynamic-fields": {
            "get": {
                "description": "Get a list of available fields",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get a list of available fields",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@enabledDSTypes": {
            "get": {
                "description": "Retrieves a list of Datasource types enabled for this user",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of enabled Datasource types",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@exportCount": {
            "get": {
                "description": "Number of user's exports \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Number of user's exports",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@exports": {
            "get": {
                "description": "Retrieves all exports belonging to a user, including expired.",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Gets user's exports",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@favorite": {
            "delete": {
                "description": "Remove a Resource from your list of favorites",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Remove a Resource from your list of favorites",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "Mark a content item as a favorite, stored on your user account \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Mark a content item as a favorite, stored on your user account",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@fieldvalue/{dotted_name}": {
            "get": {
                "description": "Get field value",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dotted_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Get field value",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getAllChildren": {
            "get": {
                "description": "leverages elasticsearch to get all the children of a resource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scroll",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Return list page of all children paths"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "leverages elasticsearch to get all the children of a resource",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getAllChildrenData": {
            "get": {
                "description": "leverages elasticsearch to get all the children of a resource, with included data \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "minimum": 1,
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scroll",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "items": {
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Return list page of all children paths and requested data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "leverages elasticsearch to get all the children of a resource, with included data",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getBoxAuthCode": {
            "get": {
                "description": "Get the Box OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Box OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getDOAuthCode": {
            "get": {
                "description": "Get the Dropbox OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Dropbox OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getDatasources": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getEBoxAuthCode": {
            "get": {
                "description": "Get the Enterprise Box OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Enterprise Box OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getGDriveAuthCode": {
            "get": {
                "description": "Get the GDrive OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the GDrive OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getGOAuthCode": {
            "get": {
                "description": "Get the GMail OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the GMail OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getGithubAuthCode": {
            "get": {
                "description": "Get the GitHub OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the GitHub OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getSalesforceAuthCode": {
            "get": {
                "description": "Get the Salesforce OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Salesforce OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getSlackAuthCode": {
            "get": {
                "description": "Get the Slack OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Slack OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getTwitterAuthCode": {
            "get": {
                "description": "Get the Twitter OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Twitter OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@getZendeskAuthCode": {
            "get": {
                "description": "Get the Zendesk OAuth code callback for a user \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Url where front-end is redirected to after the auth flow is completed",
                        "example": "https://enterprise.onna.com/foobar/user/datasource/add",
                        "in": "query",
                        "name": "redirect_to",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Get the Zendesk OAuth code callback for a user",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@invalidate-cache": {
            "get": {
                "description": "Invalidate cache of object",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully invalidated"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Invalidate cache of object",
                "tags": []
            }
        },
        "/{container_id}/{account_id}/{username}/@keys": {
            "get": {
                "description": "Get a list of unique keys in a Datasource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Use last key in previous response to get further results.",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of keys in the response.",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "default": 1000,
                            "maximum": 1000,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 1000,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return ordered list of keys"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@move": {
            "post": {
                "description": "Move resource \u301c permission: guillotina.MoveContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "destination": {
                                        "description": "Absolute path to destination object from container",
                                        "type": "string"
                                    },
                                    "new_id": {
                                        "description": "Optional new id to assign object",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully moved resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.MoveContent"
                        ]
                    }
                ],
                "summary": "Move resource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@refs": {
            "delete": {
                "description": "Delete reference to content \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "to": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "to",
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Delete reference to content",
                "tags": [
                    "Content"
                ]
            },
            "get": {
                "description": "View references to content \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "enum": [
                                "member",
                                "participant",
                                "identifies",
                                "associated",
                                "webhook",
                                "ds-member",
                                "group-associated",
                                "grouped-member"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "default": 1000,
                            "maximum": 1000,
                            "minimum": 1,
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "values": {
                                            "items": {
                                                "properties": {
                                                    "metadata": {
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "to": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 1000,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "View references to content",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "Add references to content \u301c permission: guillotina.ModifyContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "oneOf": [
                                        {
                                            "additionalProperties": false,
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "properties": {
                                                "metadata": {
                                                    "additionalProperties": {
                                                        "oneOf": [
                                                            {
                                                                "maxLength": 1024,
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            },
                                                            {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "type": "array"
                                                            }
                                                        ]
                                                    },
                                                    "maxProperties": 10,
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "enum": [
                                                        "member",
                                                        "participant",
                                                        "identifies",
                                                        "associated",
                                                        "webhook",
                                                        "ds-member",
                                                        "group-associated",
                                                        "grouped-member"
                                                    ],
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "to",
                                                "name"
                                            ],
                                            "type": "object"
                                        },
                                        {
                                            "additionalProperties": false,
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "properties": {
                                                "metadata": {
                                                    "additionalProperties": {
                                                        "oneOf": [
                                                            {
                                                                "maxLength": 1024,
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            },
                                                            {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "type": "array"
                                                            }
                                                        ]
                                                    },
                                                    "maxProperties": 10,
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "enum": [
                                                        "member",
                                                        "participant",
                                                        "identifies",
                                                        "associated",
                                                        "webhook",
                                                        "ds-member",
                                                        "group-associated",
                                                        "grouped-member"
                                                    ],
                                                    "type": "string"
                                                },
                                                "to_path": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "to_path",
                                                "name"
                                            ],
                                            "type": "object"
                                        }
                                    ]
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Add references to content",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@rules": {
            "get": {
                "description": "Get user's rules \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@search": {
            "get": {
                "description": "Make search request",
                "parameters": [
                    {
                        "description": "Generic search term support. See modifier list below for usage",
                        "in": "query",
                        "name": "term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "start from a point in search results",
                        "in": "query",
                        "name": "_from",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How large of result set. Max of 50.",
                        "in": "query",
                        "name": "_size",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How ascending field",
                        "in": "query",
                        "name": "_sort_asc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "How descending field",
                        "in": "query",
                        "name": "_sort_des",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "list of metadata fields to include",
                        "in": "query",
                        "name": "_metadata",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "list of metadata fields to exclude",
                        "in": "query",
                        "name": "_metadata_not",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__eq",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__not",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "__in",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResults",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Search results"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Make search request",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@searchTemplate": {
            "post": {
                "description": "Upload an Excel like file with search fields \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@sharing": {
            "get": {
                "description": "Get sharing settings for this resource",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceACL"
                                }
                            }
                        },
                        "description": "All the sharing defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "Get sharing settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "post": {
                "description": "Change permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Change permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "put": {
                "description": "Replace permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully replaced permissions"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Replace permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@size": {
            "get": {
                "description": "Get size of all children \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bytes_processed": {
                                            "type": "number"
                                        },
                                        "doc_count": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Calculated size of resources inside this parent"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Get size of all children",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@sourceAccountRefs": {
            "post": {
                "description": "Add references to content, create source account if it does not exist \u301c permission: onna.permission:ManageSourceAccounts",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "additionalProperties": false,
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "properties": {
                                        "metadata": {
                                            "additionalProperties": {
                                                "oneOf": [
                                                    {
                                                        "maxLength": 1024,
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "maxProperties": 10,
                                            "type": "object"
                                        },
                                        "name": {
                                            "enum": [
                                                "member",
                                                "participant",
                                                "identifies",
                                                "associated",
                                                "webhook",
                                                "ds-member",
                                                "group-associated",
                                                "grouped-member"
                                            ],
                                            "type": "string"
                                        },
                                        "to": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "to",
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.permission:ManageSourceAccounts"
                        ]
                    }
                ],
                "summary": "Add references to content, create source account if it does not exist",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@tusupload/{field_name}/{field_name}": {
            "head": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Access-Control-Expose-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Tus-Resumable": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            },
            "patch": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Upload-Offset",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "header",
                        "name": "CONTENT-LENGTH",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Upload-Offset": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Access-Control-Expose-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Tus-Resumable": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@tusupload/{field_name}/{filename}/{field_name}": {
            "head": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Access-Control-Expose-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Tus-Resumable": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            },
            "patch": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Upload-Offset",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "header",
                        "name": "CONTENT-LENGTH",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Upload-Offset": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            },
            "post": {
                "description": "TUS endpoint",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Upload-Offset",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "header",
                        "name": "UPLOAD-LENGTH",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "header",
                        "name": "UPLOAD-MD5",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "UPLOAD-EXTENSION",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "TUS-RESUMABLE",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "UPLOAD-METADATA",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully patched data",
                        "headers": {
                            "Access-Control-Expose-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Tus-Resumable": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "TUS endpoint",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@upload/{field_name}/{field_name}": {
            "patch": {
                "description": "Update the content of a file",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Update the content of a file",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@upload/{field_name}/{filename}/{field_name}": {
            "patch": {
                "description": "Update the content of a file",
                "parameters": [
                    {
                        "description": "Name of file field",
                        "in": "path",
                        "name": "field_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated content"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ModifyContent"
                        ]
                    }
                ],
                "summary": "Update the content of a file",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{container_id}/{account_id}/{username}/@userRoles": {
            "get": {
                "description": "Get a list of user roles for this context \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns array of user roles on context"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get a list of user roles for this context",
                "tags": [
                    "Auth"
                ]
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://enterprise.onna.com/api"
        }
    ],
    "tags": [
        {
            "description": "Manage User And Groups",
            "name": "Account"
        },
        {
            "description": "### User And Group Authentication\n\nAuthentication requires that you have an Onna account.\n\nPlease consult the [developer documentation](https://developers.onna.com/tutorial/primer/authentication.html) for more information.",
            "name": "Auth"
        },
        {
            "description": "List, Search And Export Content",
            "name": "Content"
        },
        {
            "description": "### Search and related operations\n\nPlease consult the [reference documentation](https://developers.onna.com/formulas/search.html) for more information.",
            "name": "Search"
        },
        {
            "description": "Manage and share workspaces.\n\nWorkspaces are collaboration spaces in Onna.\nRead the [reference documentation](https://support.onna.com/en/articles/1151536-how-to-create-a-workspace) to learn more.",
            "name": "Workspace"
        }
    ]
}